{"abstract":[{"type":"text","text":"Edwards-Curve Digital Signature Algorithm"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swifteddsa"]}],"kind":"symbol","hierarchy":{"paths":[[]]},"identifier":{"url":"doc:\/\/SwiftEdDSA\/documentation\/SwiftEdDSA","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"role":"collection","title":"SwiftEdDSA","externalID":"SwiftEdDSA","modules":[{"name":"SwiftEdDSA"}],"symbolKind":"module","roleHeading":"Framework"},"topicSections":[{"identifiers":["doc:\/\/SwiftEdDSA\/documentation\/SwiftEdDSA\/Ed","doc:\/\/SwiftEdDSA\/documentation\/SwiftEdDSA\/PrivateKey","doc:\/\/SwiftEdDSA\/documentation\/SwiftEdDSA\/PublicKey"],"title":"Classes"},{"title":"Type Aliases","identifiers":["doc:\/\/SwiftEdDSA\/documentation\/SwiftEdDSA\/Byte","doc:\/\/SwiftEdDSA\/documentation\/SwiftEdDSA\/Bytes"]},{"title":"Additional Information","identifiers":["doc:\/\/SwiftEdDSA\/documentation\/SwiftEdDSA\/CryptoKit","doc:\/\/SwiftEdDSA\/documentation\/SwiftEdDSA\/Performance","doc:\/\/SwiftEdDSA\/documentation\/SwiftEdDSA\/References"]}],"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","type":"heading","level":2,"anchor":"Overview"},{"inlineContent":[{"text":"SwiftEdDSA implements the EdDSA digital signature algorithm as defined in [RFC 8032].","type":"text"},{"type":"text","text":"\n"},{"text":"It is based on the Edwards 25519 and Edwards 448 elliptic curves.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"SwiftEdDSA functionality:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Create public and private keys","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Sign messages - deterministically or non-deterministically"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Verify signatures"}]}]}],"type":"unorderedList"},{"level":3,"type":"heading","anchor":"Create-new-keys","text":"Create new keys"},{"inlineContent":[{"inlineContent":[{"type":"text","text":"To create a new private key"}],"type":"strong"}],"type":"paragraph"},{"code":["\/\/ Curve Ed25519","let privKey = PrivateKey(kind: .ed25519)","","\/\/ Curve Ed448","let privKey = PrivateKey(kind: .ed448)"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"To create a new key pair","type":"text"}],"type":"strong"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Curve Ed25519 key pair","let (pubKey, privKey) = Ed.makeKeyPair(kind: .ed25519)","","\/\/ Curve Ed448 key pair","let (pubKey, privKey) = Ed.makeKeyPair(kind: .ed448)"]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"To create a public key corresponding to a private key","type":"text"}],"type":"strong"}]},{"syntax":"swift","code":["let pubKey = PublicKey(privateKey: privKey)"],"type":"codeListing"},{"text":"Load keys from their PEM encoding","level":3,"anchor":"Load-keys-from-their-PEM-encoding","type":"heading"},{"syntax":"swift","code":["import SwiftEdDSA","","let pubPEM =","\"\"\"","-----BEGIN PUBLIC KEY-----","MCowBQYDK2VwAyEA59XU+uLDn3fVTDfLZXJnITqbYoPwxSjfUehk8\/E9stI=","-----END PUBLIC KEY-----","\"\"\"","let privPEM =","\"\"\"","-----BEGIN PRIVATE KEY-----","MC4CAQAwBQYDK2VwBCIEIHZN8jGTAPTSZoZO9PWDhTgRDrO5Q6cW1IWCxcsmoZ7X","-----END PRIVATE KEY-----","\"\"\"","","let pub = try PublicKey(pem: pubPEM)","let priv = try PrivateKey(pem: privPEM)","","print(pub)","print(priv)"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"giving:"}],"type":"paragraph"},{"code":["Sequence (2):","    Sequence (1):","       Object Identifier: 1.3.101.112","    Bit String (256): 11100111 11010101 11010100 11111010 11100010 11000011 10011111 01110111 11010101 01001100 00110111 11001011 01100101 01110010 01100111 00100001 00111010 10011011 01100010 10000011 11110000 11000101 00101000 11011111 01010001 11101000 01100100 11110011 11110001 00111101 10110010 11010010","","Sequence (3):","    Integer: 0","    Sequence (1):","       Object Identifier: 1.3.101.112","    Octet String (34): 04 20 76 4d f2 31 93 00 f4 d2 66 86 4e f4 f5 83 85 38 11 0e b3 b9 43 a7 16 d4 85 82 c5 cb 26 a1 9e d7"],"type":"codeListing","syntax":"swift"},{"type":"heading","text":"Sign a message and verify a signature","anchor":"Sign-a-message-and-verify-a-signature","level":3},{"code":["import SwiftEdDSA","","let pubPEM =","\"\"\"","-----BEGIN PUBLIC KEY-----","MCowBQYDK2VwAyEA59XU+uLDn3fVTDfLZXJnITqbYoPwxSjfUehk8\/E9stI=","-----END PUBLIC KEY-----","\"\"\"","let privPEM =","\"\"\"","-----BEGIN PRIVATE KEY-----","MC4CAQAwBQYDK2VwBCIEIHZN8jGTAPTSZoZO9PWDhTgRDrO5Q6cW1IWCxcsmoZ7X","-----END PRIVATE KEY-----","\"\"\"","","let pubKey = try PublicKey(pem: pubPEM)","let privKey = try PrivateKey(pem: privPEM)","","let msg = Bytes(\"Hi, there\".utf8)","","\/\/ Sign deterministically","let deterministicSig = try privKey.sign(message: msg, deterministic: true)","","\/\/ Sign non-deterministically","let nonDeterministicSig = try privKey.sign(message: msg, deterministic: false)","","print(\"Verified:\", pubKey.verify(signature: deterministicSig, message: msg))","print(\"Verified:\", pubKey.verify(signature: nonDeterministicSig, message: msg))","","\/\/ See the signatures as ASN1","try print(Ed.encodeSignature(signature: deterministicSig))","try print(Ed.encodeSignature(signature: nonDeterministicSig))"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"giving (for example):","type":"text"}]},{"code":["Verified: true","Verified: true","Sequence (2):","  Octet String (32): 36 98 9e c1 34 50 2c d6 f6 c1 9b 59 9d 0b 27 19 02 b7 4f 6e 2d 69 47 6a af 42 55 2a 67 c3 05 04","  Octet String (32): 80 a1 9b 5d 44 08 b8 21 31 a9 d7 ae f2 2e 55 ce 91 15 07 dd 3c b3 cc 9a a3 3c f2 f9 3b b1 95 0e","","Sequence (2):","  Octet String (32): 81 7e 15 db 12 f3 a8 31 5e 7b e6 aa 2f d5 a0 ee b9 a1 b2 04 d9 d2 c8 0d 88 cf 1e 0f a7 75 7a 42","  Octet String (32): 12 5c 9e 89 20 7b ad 79 fa f0 c1 f4 89 a1 72 01 ae f9 91 a6 f6 0e f6 f4 3f 9e 2e fe 5d 28 f2 0a"],"type":"codeListing","syntax":"swift"},{"anchor":"Usage","type":"heading","level":3,"text":"Usage"},{"type":"paragraph","inlineContent":[{"text":"To use SwiftEdDSA, in your project ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"Package.swift"}]},{"text":" file add a dependency like","type":"text"}]},{"syntax":"swift","code":["dependencies: [","  .package(url: \"https:\/\/github.com\/leif-ibsen\/SwiftEdDSA\", from: \"3.6.0\"),","]"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftEdDSA itself depends on the ASN1, BigInt and Digest packages"}]},{"syntax":"swift","type":"codeListing","code":["dependencies: [","  .package(url: \"https:\/\/github.com\/leif-ibsen\/ASN1\", from: \"2.6.0\"),","  .package(url: \"https:\/\/github.com\/leif-ibsen\/BigInt\", from: \"1.19.0\"),","  .package(url: \"https:\/\/github.com\/leif-ibsen\/Digest\", from: \"1.8.0\"),","],"]},{"style":"important","name":"Important","content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"text","text":" "},{"type":"text","text":"SwiftEdDSA requires Swift 5.0. It also requires that the "},{"type":"codeVoice","code":"Int"},{"type":"text","text":" and "},{"code":"UInt","type":"codeVoice"},{"type":"text","text":" types be 64 bit types."}]}],"type":"aside"}]}],"references":{"doc://SwiftEdDSA/documentation/SwiftEdDSA/PrivateKey":{"url":"\/documentation\/swifteddsa\/privatekey","title":"PrivateKey","role":"symbol","type":"topic","abstract":[{"type":"text","text":"The private key - either an Ed25519 private key or an Ed448 private key"}],"navigatorTitle":[{"text":"PrivateKey","kind":"identifier"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"PrivateKey","kind":"identifier"}],"identifier":"doc:\/\/SwiftEdDSA\/documentation\/SwiftEdDSA\/PrivateKey"},"doc://SwiftEdDSA/documentation/SwiftEdDSA/Bytes":{"url":"\/documentation\/swifteddsa\/bytes","kind":"symbol","title":"Bytes","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"Bytes","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Bytes"}],"abstract":[{"type":"text","text":"Array of unsigned 8 bit values"}],"type":"topic","role":"symbol","identifier":"doc:\/\/SwiftEdDSA\/documentation\/SwiftEdDSA\/Bytes"},"doc://SwiftEdDSA/documentation/SwiftEdDSA/PublicKey":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"PublicKey","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/SwiftEdDSA\/documentation\/SwiftEdDSA\/PublicKey","abstract":[{"type":"text","text":"The public key - either an Ed25519 public key or an Ed448 public key"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"PublicKey","kind":"identifier"}],"url":"\/documentation\/swifteddsa\/publickey","title":"PublicKey"},"doc://SwiftEdDSA/documentation/SwiftEdDSA/Performance":{"kind":"article","abstract":[{"type":"text","text":"Execution times for certain SwiftEdDSA operations"}],"title":"Performance","type":"topic","identifier":"doc:\/\/SwiftEdDSA\/documentation\/SwiftEdDSA\/Performance","role":"article","url":"\/documentation\/swifteddsa\/performance"},"doc://SwiftEdDSA/documentation/SwiftEdDSA/References":{"url":"\/documentation\/swifteddsa\/references","abstract":[{"type":"text","text":"Algorithms from the following books and papers have been used in the implementation"}],"title":"References","type":"topic","role":"article","kind":"article","identifier":"doc:\/\/SwiftEdDSA\/documentation\/SwiftEdDSA\/References"},"doc://SwiftEdDSA/documentation/SwiftEdDSA/CryptoKit":{"kind":"article","abstract":[{"type":"text","text":"SwiftEdDSA is compatible with Appleâ€™s CryptoKit framework"}],"title":"CryptoKit Compatibility","type":"topic","identifier":"doc:\/\/SwiftEdDSA\/documentation\/SwiftEdDSA\/CryptoKit","role":"article","url":"\/documentation\/swifteddsa\/cryptokit"},"doc://SwiftEdDSA/documentation/SwiftEdDSA/Byte":{"abstract":[{"type":"text","text":"Unsigned 8 bit value"}],"kind":"symbol","title":"Byte","type":"topic","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"Byte","kind":"identifier"}],"url":"\/documentation\/swifteddsa\/byte","identifier":"doc:\/\/SwiftEdDSA\/documentation\/SwiftEdDSA\/Byte","navigatorTitle":[{"kind":"identifier","text":"Byte"}]},"doc://SwiftEdDSA/documentation/SwiftEdDSA":{"role":"collection","identifier":"doc:\/\/SwiftEdDSA\/documentation\/SwiftEdDSA","type":"topic","abstract":[{"text":"Edwards-Curve Digital Signature Algorithm","type":"text"}],"title":"SwiftEdDSA","url":"\/documentation\/swifteddsa","kind":"symbol"},"doc://SwiftEdDSA/documentation/SwiftEdDSA/Ed":{"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Ed","kind":"identifier"}],"title":"Ed","role":"symbol","kind":"symbol","identifier":"doc:\/\/SwiftEdDSA\/documentation\/SwiftEdDSA\/Ed","url":"\/documentation\/swifteddsa\/ed","navigatorTitle":[{"kind":"identifier","text":"Ed"}],"abstract":[]}}}